/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
package ca3.yapl.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int IF = 5;
  /** RegularExpression Id. */
  int DO = 6;
  /** RegularExpression Id. */
  int OR = 7;
  /** RegularExpression Id. */
  int AND = 8;
  /** RegularExpression Id. */
  int END = 9;
  /** RegularExpression Id. */
  int INT = 10;
  /** RegularExpression Id. */
  int NEW = 11;
  /** RegularExpression Id. */
  int VOID = 12;
  /** RegularExpression Id. */
  int TRUE = 13;
  /** RegularExpression Id. */
  int ELSE = 14;
  /** RegularExpression Id. */
  int BOOL = 15;
  /** RegularExpression Id. */
  int THEN = 16;
  /** RegularExpression Id. */
  int FALSE = 17;
  /** RegularExpression Id. */
  int WHILE = 18;
  /** RegularExpression Id. */
  int WRITE = 19;
  /** RegularExpression Id. */
  int ENDIF = 20;
  /** RegularExpression Id. */
  int BEGIN = 21;
  /** RegularExpression Id. */
  int CONST = 22;
  /** RegularExpression Id. */
  int RECORD = 23;
  /** RegularExpression Id. */
  int RETURN = 24;
  /** RegularExpression Id. */
  int DECLARE = 25;
  /** RegularExpression Id. */
  int PROGRAM = 26;
  /** RegularExpression Id. */
  int ENDWHILE = 27;
  /** RegularExpression Id. */
  int READONLY = 28;
  /** RegularExpression Id. */
  int PROCEDURE = 29;
  /** RegularExpression Id. */
  int ENDRECORD = 30;
  /** RegularExpression Id. */
  int LETTER = 31;
  /** RegularExpression Id. */
  int DIGIT = 32;
  /** RegularExpression Id. */
  int LT = 33;
  /** RegularExpression Id. */
  int LEQ = 34;
  /** RegularExpression Id. */
  int GT = 35;
  /** RegularExpression Id. */
  int GEQ = 36;
  /** RegularExpression Id. */
  int EQ = 37;
  /** RegularExpression Id. */
  int NEQ = 38;
  /** RegularExpression Id. */
  int PLUS = 39;
  /** RegularExpression Id. */
  int MINUS = 40;
  /** RegularExpression Id. */
  int MULT = 41;
  /** RegularExpression Id. */
  int DIV = 42;
  /** RegularExpression Id. */
  int MOD = 43;
  /** RegularExpression Id. */
  int SQUARE_BRACKET_OPEN = 44;
  /** RegularExpression Id. */
  int SQUARE_BRACKET_CLOSE = 45;
  /** RegularExpression Id. */
  int DOT = 46;
  /** RegularExpression Id. */
  int HASH = 47;
  /** RegularExpression Id. */
  int OPEN_PARENTH = 48;
  /** RegularExpression Id. */
  int CLOSE_PARENTH = 49;
  /** RegularExpression Id. */
  int COMMA = 50;
  /** RegularExpression Id. */
  int ASSIGN = 51;
  /** RegularExpression Id. */
  int SEMICOLON = 52;
  /** RegularExpression Id. */
  int CONST_ASSIGN = 53;
  /** RegularExpression Id. */
  int COMMENT_OPEN = 54;
  /** RegularExpression Id. */
  int COMMENT_CLOSE = 55;
  /** RegularExpression Id. */
  int QUOTE = 56;
  /** RegularExpression Id. */
  int OTHERCHAR = 57;
  /** RegularExpression Id. */
  int IDENT = 58;
  /** RegularExpression Id. */
  int NUMBER = 59;
  /** RegularExpression Id. */
  int STRING = 60;
  /** RegularExpression Id. */
  int COMMENT = 61;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"If\"",
    "\"Do\"",
    "\"Or\"",
    "\"And\"",
    "\"End\"",
    "\"int\"",
    "\"new\"",
    "\"void\"",
    "\"True\"",
    "\"Else\"",
    "\"bool\"",
    "\"Then\"",
    "\"False\"",
    "\"While\"",
    "\"Write\"",
    "\"EndIf\"",
    "\"Begin\"",
    "\"Const\"",
    "\"Record\"",
    "\"Return\"",
    "\"Declare\"",
    "\"Program\"",
    "\"EndWhile\"",
    "\"readonly\"",
    "\"Procedure\"",
    "\"EndRecord\"",
    "<LETTER>",
    "<DIGIT>",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"==\"",
    "\"!=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"[\"",
    "\"]\"",
    "\".\"",
    "\"#\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\":=\"",
    "\";\"",
    "\"=\"",
    "\"/*\"",
    "\"*/\"",
    "\"\\\"\"",
    "<OTHERCHAR>",
    "<IDENT>",
    "<NUMBER>",
    "<STRING>",
    "<COMMENT>",
  };

}
